#summary usage refernce

= Usage =

Description of typical use of Parse.Cmd.

Here is an excerpt from the included source:

{{{
    public static void main(String[] args) {
        
        ParseCmd cmd = new ParseCmd.Builder()           
                  .help(usage)                          
                  .parm("-loop",  "10" ).req("1")       
                  .parm("-delay", "100").req("1")       
                                        .rex("^[0-9]{3}$") 
                                        .msg("must enter 3-digits.") 
                  .parm("-if",    "./java.txt").req("1")
                  .parm("-tt",    "0")                  
                  .parm("-of",    "readme.txt")
                  .parm("-verbose")
                  .build();  
       
        System.out.println(cmd.displayParms());
        String err = cmd.validate(args);
        Map<String,String> R;  
        if( err.isEmpty()) {
            R = cmd.parse(args);
            System.out.println(cmd.displayMap(R));
        }
        else System.out.println(err);                        
    }
}}}

{{{
        parse(args) returns a Map, R above, to be used by the caller to query 
        arguments that have been validated and merged with default values in 
        Parms Map

        This Map allows the caller to proceed and no longer need the API.
        parse(args) should be called once validate(args) returns an 
        empty String. 
           
        The Map is valid should response to validate(args) result in an empty
        String; if not, the return String shows the error to the caller as
        shown below.
         
          
        java -cp parsecmd.jar ca.zmatrix.cli.ParseCmd  -loop 1
          
                enter required parms: -loop -delay -if
                usage: -loop n  -delay nnn -if fileName [ -tt nn  -of abc ]
          
        The message indicats that 3-parameters are required, -loop, -delay and -if
        
          
        java -cp parsecmd.jar ca.zmatrix.cli.ParseCmd  -loop 1 -delay 33  -if xyz.txt
          
                -delay value of  '33' is invalid;
                             must enter 3-digits.
                usage: -loop n  -delay nnn -if fileName [ -tt nn  -of abc ]
          
         
        java -cp parsecmd.jar ca.zmatrix.cli.ParseCmd  -loop 1 -delay 555  -if afile.txt
         
        String err = cmd.validate(args);    returns an empty string e.g. ok
        Map<String,String> R = cmd.parse(args); returns the Map of merged values and the
        caller application no longer needs the API; the obtained Map has the validated
        and merged parameters such as the ones in this example.
          
              -loop     1
              -delay    555
              -if       afile.txt
              -tt       0
              -of       readme.txt


          
          
       
}}}